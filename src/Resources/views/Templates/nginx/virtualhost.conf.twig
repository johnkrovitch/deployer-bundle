server {
    server_name {{ domains | join(' ') }};
    root {{ server_root }};

    location / {
        # try to serve file directly, fallback to index.php
        try_files $uri /{{ front_controller }}$is_args$args;
    }

    location ~ ^/{{ front_controller | replace({'.': '\\.'}) }}(/|$) {
        fastcgi_pass unix:{{ fast_cgi_path }};
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;

        client_body_buffer_size {{ client_body_buffer_size }};
        client_max_body_size {{ client_max_body_size }};

        # optionally set the value of the environment variables used in the application
        # fastcgi_param APP_ENV prod;
        # fastcgi_param APP_SECRET <app-secret-id>;
        # fastcgi_param DATABASE_URL "mysql://db_user:db_pass@host:3306/db_name";

        # When you are using symlinks to link the document root to the
        # current version of your application, you should pass the real
        # application path instead of the path to the symlink to PHP
        # FPM.
        # Otherwise, PHP's OPcache may not properly detect changes to
        # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
        # for more information).
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;

        # Prevents URIs that include the front controller. This will 404:
        # http://domain.tld/index.php/some-path
        # Remove the internal directive to allow URIs like this
        internal;
    }

    # return 404 for all other php files not matching the front controller
    # this prevents access to other php files you don't want to be accessible.
    location ~ \.php$ {
        return 404;
    }
}

{% for domain in domains %}
server {
    server_name {{ domain }};
    error_log /var/log/nginx/{{ domain }}_error.log;
    access_log /var/log/nginx/{{ domain }}_access.log;
}
{% endfor %}
